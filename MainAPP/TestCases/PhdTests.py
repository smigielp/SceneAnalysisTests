from Recognition import GraphRecognition, FuzzyShapeRecognition
from Tools import GnuplotDrawer, Utils
from ImageProcessor import ImageProcessor
from ImageApi import Filter
from SceneRepTools.Structures import GraphStructure


PARAMETER_FILE_NAME = "../../Parameters/algorithms_parameters.txt"

def runTest(debugLevel=1):
    phdTestCaseI_create_graph_and_3Dmodel(debugLevel)
    #phdTestCaseI_combine_graph_with_3Dmodel()
    #phdTestCaseII()


def phdTestCaseI_create_graph_and_3Dmodel(debugLevel=1):

    filter = Filter()
    filename = 'E:\NAUKA\Doktorat\Do rozprawy\obrazy\small_scene_wzorzec\small_scene_pattern2.png'
    imagecv = filter.loadCvImage(filename)
    processor = ImageProcessor(PARAMETER_FILE_NAME, 'parameters_test1', inDebugLevel=debugLevel)
    sourceVectors = processor.getVectorRepresentation(imagecv, filter.imagePreprocess, filter.imageEdgeDetect)
    GnuplotDrawer.printVectorPicture(sourceVectors['vect'], sourceVectors['domain'])
    print sourceVectors

    # tworzenie GBS dla wzorca
    pattern_graph = GraphStructure(sourceVectors['vect'], sourceVectors['domain'], 1)
    GnuplotDrawer.printObjectGraph(pattern_graph)

    small_map = {'color': [[203, 202, 202], [255, 222, 0], [118, 37, 255]], 'vect': [
        [[101.0, 335.5], [106, 337], [113, 346], [135, 345], [163, 335], [162, 318], [166, 310], [140, 309], [134, 301],
         [133, 249], [137, 244], [159, 242], [159, 215], [134, 197], [106, 198], [96, 204], [97, 322], [101.0, 335.5]],
        [[294.0, 450.0], [285, 468], [290, 476], [353, 509], [368, 504], [365, 492], [374, 481], [377, 456], [358, 449],
         [349, 465], [341, 467], [305, 448], [298, 447], [294.0, 450.0]],
        [[448.5, 272.0], [448, 282], [452, 293], [461, 301], [491, 289], [502, 289], [509, 296], [517, 298], [532, 293],
         [537, 287], [526, 239], [519, 236], [496, 241], [493, 254], [488, 259], [448.5, 272.0]]],
                 'domain': [[0, 720L], [0, 576L]]}


    #GnuplotDrawer.printVectorPicture(small_map['vect'], small_map['domain'])

    small_map_object1 = {'color': [[205, 205, 205]], 'vect': [
        [[268.5, 119.0], [308, 315], [337, 440], [345, 445], [405, 430], [412, 425], [411, 410], [393, 330], [392, 308],
         [386, 296], [345, 101], [341, 97], [334, 97], [300, 104], [276, 110], [268.5, 119.0]]],
                         'domain': [[0, 720L], [0, 480L]]}
    small_map_object2 = {'color': [[253, 225, 0]], 'vect': [
        [[459.5, 208.0], [432, 258], [426, 260], [315, 192], [281, 249], [295, 263], [351, 297], [369, 312], [387, 320],
         [397, 330], [451, 359], [458, 354], [468, 337], [515, 244], [515, 239], [498, 226], [466, 206],
         [459.5, 208.0]]], 'domain': [[0, 720L], [0, 576L]]}
    small_map_object3 = {'color': [[135, 45, 255]], 'vect': [
        [[331.0, 180.0], [328, 187], [336, 210], [335, 222], [326, 227], [195, 264], [178, 277], [179, 290], [197, 352],
         [204, 363], [229, 355], [241, 355], [247, 350], [263, 348], [285, 339], [354, 319], [365, 321], [369, 337],
         [382, 354], [410, 350], [418, 344], [448, 334], [456, 328], [452, 311], [454, 302], [448, 293], [441, 266],
         [442, 256], [437, 249], [431, 227], [417, 159], [405, 157], [382, 162], [331.0, 180.0]]],
                         'domain': [[0, 720L], [0, 480L]]}

    # transformacja poprawnych wizerunkow obiektow przed umieszczeniem w grafie, ktorego osnowe stanowi small_map
    scale = 0.4
    object1_graphCentroid = Utils.getCenterPoint(small_map['vect'][0])
    object1_vectors = transformShapeForGraph(small_map_object1['vect'][0], object1_graphCentroid, scale)

    object2_graphCentroid = Utils.getCenterPoint(small_map['vect'][1])
    object2_vectors = transformShapeForGraph(small_map_object2['vect'][0], object2_graphCentroid, scale)

    object3_graphCentroid = Utils.getCenterPoint(small_map['vect'][2])
    object3_vectors = transformShapeForGraph(small_map_object3['vect'][0], object3_graphCentroid, scale)

    small_map['vect'] = [object1_vectors, object2_vectors, object3_vectors]

    #print "small_map with proper shapes: ", small_map

    # tworzenie GBS dla mapy
    small_map_graph = GraphStructure(small_map['vect'], small_map['domain'], 1)
    #GnuplotDrawer.printObjectGraph(small_map_graph)


    marked_obj = pattern_graph.getGraphElement(0)
    search_results = GraphRecognition.findPatternInGraph(marked_obj, small_map_graph.getGraph(), debugLevel)

    print ''
    print '=====Matching Result==============================='
    if len(search_results) > 0:
        # getting best matching
        objectShapeMatching = search_results[0]
        objStats = objectShapeMatching['fullStats']['centeObjMatchStats']
        print 'object: ', objStats['obj']
        print 'center: ', objStats['center']
        print 'idx   : ', objStats['graphIdx']
        print 'scale : ', objStats['scale']
        print 'rotate: ', objStats['rotate']
        print '----Matching neighbors----------------------'
        nbrStats = objectShapeMatching['fullStats']['neighborMatchStats']
        for stat in nbrStats:
            if stat == -1:
                print "No match"
            else:
                print "Match rate: ", stat

        GnuplotDrawer.printObjectGraph(small_map_graph, objectShapeMatching['matched'])
    else:
        print 'NO MATCH'
        GnuplotDrawer.printObjectGraph(small_map_graph)
    print '==================================================='




def phdTestCaseI_combine_graph_with_3Dmodel(debugLevel=0):
    small_map_object3_front = {'color': [[51, 169, 198], [84, 163, 160], [81, 169, 173]], 'vect': [
        [[485.5, 365.0], [485, 156], [481, 76], [477, 68], [420, 63], [413, 63], [406, 69], [404, 112], [407, 150],
         [403, 165], [405, 217], [402, 224], [401, 241], [401, 321], [402, 339], [408, 350], [409, 367], [403, 371],
         [367, 371], [305, 367], [262, 368], [227, 362], [226, 355], [231, 352], [235, 342], [242, 208], [253, 85],
         [250, 70], [241, 59], [189, 60], [183, 57], [174, 63], [160, 183], [161, 207], [150, 338], [151, 355],
         [156, 359], [167, 359], [172, 364], [170, 421], [175, 440], [184, 444], [280, 450], [464, 450], [469, 446],
         [472, 372], [475, 368], [485.5, 365.0]],
        [[206.0, 397.5], [205, 405], [209, 409], [236, 414], [260, 413], [270, 404], [263, 395], [234, 389], [216, 390],
         [213, 395], [206.0, 397.5]],
        [[409.5, 403.5], [405, 408], [400, 406], [395, 415], [389, 415], [386, 406], [373, 396], [429, 395], [428, 406],
         [421, 402], [409.5, 403.5]]], 'domain': [[0, 720L], [0, 480L]]}
    small_map_object3_side = {'color': [[4, 98, 127]], 'vect': [
        [[343.5, 350.0], [347, 284], [349, 59], [345, 55], [299, 55], [294, 60], [292, 346], [296, 352], [301, 353],
         [339, 353], [343.5, 350.0]]], 'domain': [[0, 720L], [0, 480L]]}
    small_map_object3_top = {'color': [[235, 235, 235]], 'vect': [
        [[181.5, 250.0], [182, 311], [184, 307], [329, 311], [485, 311], [507, 306], [507, 242], [503, 226], [192, 223],
         [182, 234], [181.5, 250.0]]], 'domain': [[0, 720L], [0, 480L]]}

    proc = ImageProcessor(PARAMETER_FILE_NAME, 'parameters_test1', inDebugLevel=debugLevel)
    proc.domain3D = [[0, 720], [0, 720], [0, 720]]
    proc.domain = [[0, 720], [0, 720]]
    top_vectors = [small_map_object3_top['vect'], None]
    right_vectors = [small_map_object3_side['vect'], 0.5]
    front_vectors = [small_map_object3_front['vect'], 0]
    model = proc.create3DStructureFromVectors([top_vectors, right_vectors, front_vectors])
    #model.showAll3D()
    #model.showWalls3D()

    domain3D = small_map_with_proper_shapes['domain'] + [[-100, 500]]
    small_map_graph = GraphStructure(small_map_with_proper_shapes['vect'], domain3D, 1)

    # get lowest point of 3D model
    model_bottom_altitude = Utils.getMinPoint(small_map_object3_front['vect'][0], 1)[1]

    model_centroid = Utils.getCentroid(small_map_object3_top['vect'][0])
    model_centroid = [model_centroid[0], model_centroid[1], model_bottom_altitude]   # [340, 267, 10]
    graph_object_centroid = Utils.getCentroid(small_map_graph.getGraphElementShape(0))
    graph_object_centroid = [graph_object_centroid[0], graph_object_centroid[1], 0]
    model_scale = 0.4
    rotation = -0.57
    small_map_graph.add3DModel(model,
                               model_location=model_centroid,
                               graph_object_location=graph_object_centroid,
                               graph_to_model_scale=model_scale,
                               graph_objec_rotation=rotation,
                               graph_object_idx=0)

    GnuplotDrawer.printObjectGraph(small_map_graph, print3DModels=True)
    return


# bierze zwektoryzowany obiekt i przeksztalca go tak by umieszczony byl tam gdzie na oryginalnej mapie
# jest jego znieksztalcony wizerunek
def transformShapeForGraph(vectors, graphCentroid, scale):
    centroid = Utils.getCenterPoint(vectors)
    for pt in vectors:
        pt[0] = (pt[0] - centroid[0]) * scale + graphCentroid[0]
        pt[1] = (pt[1] - centroid[1]) * scale + graphCentroid[1]
    return vectors



def phdTestCaseII(debugLevel=1, graphLevel=1):
    vectorBigMap = [[[181.0, 249.0], [165, 271], [184, 290], [215, 254], [219, 244], [199, 228], [181.0, 249.0]],
                    [[243.0, 437.0], [253, 436], [260, 426], [267, 427], [308, 413], [313, 404], [305, 379], [301, 378],
                     [256, 396], [251, 395], [242, 370], [229, 370], [222, 374], [217, 384], [220, 400], [233, 432],
                     [243.0, 437.0]],
                    [[284.0, 106.5], [297, 111], [304, 106], [317, 67], [318, 55], [247, 31], [238, 43], [236, 59],
                     [247, 68], [277, 78], [280, 81], [278, 94], [284.0, 106.5]],
                    [[382.5, 326.0], [384, 348], [395, 360], [398, 404], [406, 412], [425, 410], [429, 406], [426, 357],
                     [430, 352], [441, 348], [439, 321], [435, 318], [390, 321], [382.5, 326.0]],
                    [[484.5, 174.5], [480, 190], [484, 198], [525, 209], [536, 206], [553, 109], [553, 102], [549, 98],
                     [508, 86], [499, 90], [495, 114], [499, 119], [512, 122], [517, 128], [516, 143], [512, 148],
                     [512, 167], [507, 171], [489, 168], [484.5, 174.5]]]
    vectorBigMapDomain = [[0, 720], [0, 576]]

    #big_map_object2 = {'color': [[54, 13, 255]], 'vect': [
    #    [[302.5, 378.0], [308, 368], [313, 373], [317, 372], [451, 309], [482, 290], [457, 228],
    #     [444, 205], [285, 275], [272, 286], [267, 284], [263, 276], [229, 192], [160, 221], [148, 229], [179, 322],
    #     [216, 414], [275, 392], [302.5, 378.0]]], 'domain': [[0, 718L], [0, 481L]]}
    big_map_object2 = {'color': [[54, 13, 255]], 'vect': [
        [[302.5, 378.0], [299, 355], [303, 356], [308, 368], [313, 373], [317, 372], [451, 309], [482, 290], [457, 228],
        [444, 205], [285, 275], [272, 286], [267, 284], [263, 276], [229, 192], [160, 221], [148, 229], [179, 322],
         [216, 414], [275, 392], [302.5, 378.0]]], 'domain': [[0, 718L], [0, 481L]]}
    big_map_object4 = {'color': [[255, 255, 255]], 'vect': [
        [[328.0, 382.0], [323, 387], [328, 409], [326, 419], [332, 427], [385, 421], [411, 414], [390, 249], [393, 245],
         [432, 242], [436, 238], [422, 160], [339, 168], [325, 174], [318, 170], [271, 179], [280, 266], [283, 271],
         [310, 269], [316, 283], [313, 289], [320, 355], [323, 378], [328, 378], [328.0, 382.0]]],
                       'domain': [[0, 719L], [0, 479L]]}
    big_map_object1 = {'color': [[255, 255, 255]], 'vect': [
        [[358.5, 182.0], [310, 224], [282, 257], [267, 266], [261, 277], [251, 282], [213, 319], [221, 332], [282, 402],
         [355, 335], [436, 254], [434, 247], [375, 180], [365, 176], [358.5, 182.0]]], 'domain': [[0, 721L], [0, 479L]]}
    big_map_object5 = {'color': [[255, 255, 255]], 'vect': [
        [[230.0, 326.5], [335, 352], [355, 356], [363, 353], [414, 88], [413, 74], [320, 51], [292, 45], [286, 48],
         [274, 99], [274, 120], [280, 126], [335, 140], [334, 158], [331, 160], [327, 180], [328, 188], [324, 195],
         [310, 269], [305, 272], [243, 258], [239, 263], [232, 297], [228, 319], [230.0, 326.5]]],
                       'domain': [[0, 721L], [0, 480L]]}
    big_map_object3 = {'color': [[255, 255, 255]], 'vect': [
        [[395.0, 239.5], [240, 166], [235, 171], [215, 216], [204, 247], [209, 252], [358, 324], [361, 332], [355, 343],
         [355, 351], [341, 375], [331, 405], [339, 418], [414, 448], [421, 439], [480, 279], [403, 247],
         [395.0, 239.5]]], 'domain': [[0, 720L], [0, 481L]]}


    scale1 = 0.33
    scale2 = 0.35
    scale3 = 0.4
    scale4 = 0.4
    scale5 = 0.4
    object1_graphCentroid = Utils.getCenterPoint(vectorBigMap[0])
    object1_vectors = transformShapeForGraph(big_map_object1['vect'][0], object1_graphCentroid, scale1)

    object2_graphCentroid = Utils.getCenterPoint(vectorBigMap[1])
    object2_vectors = transformShapeForGraph(big_map_object2['vect'][0], object2_graphCentroid, scale2)

    object3_graphCentroid = Utils.getCenterPoint(vectorBigMap[2])
    object3_vectors = transformShapeForGraph(big_map_object3['vect'][0], object3_graphCentroid, scale3)

    object4_graphCentroid = Utils.getCenterPoint(vectorBigMap[3])
    object4_vectors = transformShapeForGraph(big_map_object4['vect'][0], object4_graphCentroid, scale4)

    object5_graphCentroid = Utils.getCenterPoint(vectorBigMap[4])
    object5_vectors = transformShapeForGraph(big_map_object5['vect'][0], object5_graphCentroid, scale5)

    vectorBigMap = [object1_vectors, object2_vectors, object3_vectors, object4_vectors, object5_vectors]

    bigMapObjGraph = GraphStructure(vectorBigMap, vectorBigMapDomain, graphLevel)
    GnuplotDrawer.printObjectGraph(bigMapObjGraph)

    vectorsBigMapPattern = {'color': [[22, 3, 240], [22, 3, 240], [22, 3, 240]], 'vect': [[[137.0, 191.5], [119, 109], [76, 117], [92, 195], [91, 204], [68, 209], [76, 249], [78, 251], [160, 233], [153, 189], [137.0, 191.5]], [[215.0, 109.5], [235, 148], [312, 106], [318, 107], [337, 144], [375, 125], [336, 45], [215.0, 109.5]], [[350.0, 278.0], [347, 283], [382, 312], [447, 241], [410, 209], [350.0, 278.0]]], 'domain': [[0, 502L], [0, 349L]]}

    vectorsBigMapPatternDomain = [[0, 502], [0, 349]]
    markedObjectIdx = 1
    patternGraph = GraphStructure(vectorsBigMapPattern['vect'], vectorsBigMapPatternDomain, graphLevel)
    GnuplotDrawer.printObjectGraph(patternGraph, objectsToMark={markedObjectIdx: []})

    markedObj = patternGraph.getGraphElement(markedObjectIdx)
    
    searchResults = GraphRecognition.findPatternInGraph(markedObj, bigMapObjGraph.getGraph())
    
    print ''
    print '=====Matching Result==============================='
    if len(searchResults) > 0:
        # getting best matching 
        objectShapeMatching = searchResults[0]
        objStats = objectShapeMatching['fullStats']['centeObjMatchStats']
        print 'object: ', objStats['obj']
        print 'center: ', objStats['center']
        print 'idx   : ', objStats['graphIdx']
        print 'scale : ', objStats['scale']
        print 'rotate: ', objStats['rotate']
        print '----Matching neighbors----------------------' 
        nbrStats = objectShapeMatching['fullStats']['neighborMatchStats']
        for stat in nbrStats:
            if stat == -1: 
                print "No match"
            else:
                print "Match rate: ", stat
        
        GnuplotDrawer.printObjectGraph(bigMapObjGraph, objectShapeMatching['matched'])
        print objectShapeMatching['matched']
    else:
        print 'NO MATCH'   
        GnuplotDrawer.printObjectGraph(bigMapObjGraph)
    print '==================================================='
           
    objectsToMark = {markedObjectIdx: 'all'}
        
    GnuplotDrawer.printObjectGraph(patternGraph, objectsToMark)


# For small scene test
def compareTopToPattern(debugLevel):
    small_map_object3_top = {'color': [[235, 235, 235]], 'vect': [
        [[181.5, 250.0], [182, 311], [184, 307], [329, 311], [485, 311], [507, 306], [507, 242], [503, 226], [192, 223],
         [182, 234], [181.5, 250.0]]], 'domain': [[0, 720L], [0, 480L]]}

    small_scene_pattern = [[41.0, 135.5], [51, 160], [60, 171], [236, 79], [216, 44], [41.0, 135.5]]

    found = FuzzyShapeRecognition.findSinglePattern(small_map_object3_top, small_scene_pattern)
    print found



#####################################################################################
vectorBigMap = [[[181.0, 249.0], [165, 271], [184, 290], [215, 254], [219, 244], [199, 228], [181.0, 249.0]], [[243.0, 437.0], [253, 436], [260, 426], [267, 427], [308, 413], [313, 404], [305, 379], [301, 378], [256, 396], [251, 395], [242, 370], [229, 370], [222, 374], [217, 384], [220, 400], [233, 432], [243.0, 437.0]], [[284.0, 106.5], [297, 111], [304, 106], [317, 67], [318, 55], [247, 31], [238, 43], [236, 59], [247, 68], [277, 78], [280, 81], [278, 94], [284.0, 106.5]], [[382.5, 326.0], [384, 348], [395, 360], [398, 404], [406, 412], [425, 410], [429, 406], [426, 357], [430, 352], [441, 348], [439, 321], [435, 318], [390, 321], [382.5, 326.0]], [[484.5, 174.5], [480, 190], [484, 198], [525, 209], [536, 206], [553, 109], [553, 102], [549, 98], [508, 86], [499, 90], [495, 114], [499, 119], [512, 122], [517, 128], [516, 143], [512, 148], [512, 167], [507, 171], [489, 168], [484.5, 174.5]]]
vectorBigMapDomain = [[0, 720], [0, 576]]
vectorsBigMapPattern1 = {'color': [[2, 2, 253], [2, 2, 253], [2, 2, 253]], 'vect': [[[81.5, 279.0], [81, 282], [150, 314], [167, 277], [135, 259], [163, 199], [169, 197], [201, 213], [217, 177], [145, 143], [81.5, 279.0]], [[386.0, 391.5], [508, 477], [538, 440], [456, 379], [484, 340], [442, 310], [386, 386], [386.0, 391.5]], [[589.0, 183.5], [588, 187], [615, 228], [696, 182], [671, 138], [589.0, 183.5]]], 'domain': [[0, 760L], [0, 511L]]}
vectorsBigMapPattern = {'color': [[22, 3, 240], [22, 3, 240], [22, 3, 240]], 'vect': [[[137.0, 191.5], [119, 109], [76, 117], [92, 195], [91, 204], [68, 209], [76, 249], [78, 251], [160, 233], [153, 189], [137.0, 191.5]], [[215.0, 109.5], [235, 148], [312, 106], [318, 107], [337, 144], [375, 125], [336, 45], [215.0, 109.5]], [[350.0, 278.0], [347, 283], [382, 312], [447, 241], [410, 209], [350.0, 278.0]]], 'domain': [[0, 502L], [0, 349L]]}


small_map = {'color': [[203, 202, 202], [255, 222, 0], [118, 37, 255]], 'vect': [[[101.0, 335.5], [106, 337], [113, 346], [135, 345], [163, 335], [162, 318], [166, 310], [140, 309], [134, 301], [133, 249], [137, 244], [159, 242], [159, 215], [134, 197], [106, 198], [96, 204], [97, 322], [101.0, 335.5]], [[294.0, 450.0], [285, 468], [290, 476], [353, 509], [368, 504], [365, 492], [374, 481], [377, 456], [358, 449], [349, 465], [341, 467], [305, 448], [298, 447], [294.0, 450.0]], [[448.5, 272.0], [448, 282], [452, 293], [461, 301], [491, 289], [502, 289], [509, 296], [517, 298], [532, 293], [537, 287], [526, 239], [519, 236], [496, 241], [493, 254], [488, 259], [448.5, 272.0]]], 'domain': [[0, 720L], [0, 576L]]}
small_map_object1 = {'color': [[253, 225, 0]], 'vect': [[[459.5, 208.0], [432, 258], [426, 260], [315, 192], [281, 249], [295, 263], [351, 297], [369, 312], [387, 320], [397, 330], [451, 359], [458, 354], [468, 337], [515, 244], [515, 239], [498, 226], [466, 206], [459.5, 208.0]]], 'domain': [[0, 720L], [0, 576L]]}
small_map_object2 = {'color': [[135, 45, 255]], 'vect': [[[331.0, 180.0], [328, 187], [336, 210], [335, 222], [326, 227], [195, 264], [178, 277], [179, 290], [197, 352], [204, 363], [229, 355], [241, 355], [247, 350], [263, 348], [285, 339], [354, 319], [365, 321], [369, 337], [382, 354], [410, 350], [418, 344], [448, 334], [456, 328], [452, 311], [454, 302], [448, 293], [441, 266], [442, 256], [437, 249], [431, 227], [417, 159], [405, 157], [382, 162], [331.0, 180.0]]], 'domain': [[0, 720L], [0, 480L]]}
small_map_object3 = {'color': [[205, 205, 205]], 'vect': [[[268.5, 119.0], [308, 315], [337, 440], [345, 445], [405, 430], [412, 425], [411, 410], [393, 330], [392, 308], [386, 296], [345, 101], [341, 97], [334, 97], [300, 104], [276, 110], [268.5, 119.0]]], 'domain': [[0, 720L], [0, 480L]]}
small_map_object3_front = {'color': [[51, 169, 198], [84, 163, 160], [81, 169, 173]], 'vect': [[[485.5, 365.0], [485, 156], [481, 76], [477, 68], [420, 63], [413, 63], [406, 69], [404, 112], [407, 150], [403, 165], [405, 217], [402, 224], [401, 241], [401, 321], [402, 339], [408, 350], [409, 367], [403, 371], [367, 371], [305, 367], [262, 368], [227, 362], [226, 355], [231, 352], [235, 342], [242, 208], [253, 85], [250, 70], [241, 59], [189, 60], [183, 57], [174, 63], [160, 183], [161, 207], [150, 338], [151, 355], [156, 359], [167, 359], [172, 364], [170, 421], [175, 440], [184, 444], [280, 450], [464, 450], [469, 446], [472, 372], [475, 368], [485.5, 365.0]], [[206.0, 397.5], [205, 405], [209, 409], [236, 414], [260, 413], [270, 404], [263, 395], [234, 389], [216, 390], [213, 395], [206.0, 397.5]], [[409.5, 403.5], [405, 408], [400, 406], [395, 415], [389, 415], [386, 406], [373, 396], [429, 395], [428, 406], [421, 402], [409.5, 403.5]]], 'domain': [[0, 720L], [0, 480L]]}
small_map_object3_side = {'color': [[4, 98, 127]], 'vect': [[[343.5, 350.0], [347, 284], [349, 59], [345, 55], [299, 55], [294, 60], [292, 346], [296, 352], [301, 353], [339, 353], [343.5, 350.0]]], 'domain': [[0, 720L], [0, 480L]]}
small_map_object3_top = {'color': [[235, 235, 235]], 'vect': [[[181.5, 250.0], [182, 311], [184, 307], [329, 311], [485, 311], [507, 306], [507, 242], [503, 226], [192, 223], [182, 234], [181.5, 250.0]]], 'domain': [[0, 720L], [0, 480L]]}

small_map_with_proper_shapes = {'color': [[203, 202, 202], [255, 222, 0], [118, 37, 255]], 'vect': [[[99.46111111111111, 229.67222222222222], [115.26111111111112, 308.07222222222225], [126.86111111111111, 358.07222222222225], [130.0611111111111, 360.07222222222225], [154.06111111111113, 354.07222222222225], [156.86111111111111, 352.07222222222225], [156.4611111111111, 346.07222222222225], [149.26111111111112, 314.07222222222225], [148.86111111111111, 305.27222222222224], [146.4611111111111, 300.47222222222223], [130.0611111111111, 222.47222222222223], [128.4611111111111, 220.8722222222222], [125.66111111111111, 220.8722222222222], [112.06111111111112, 223.67222222222222], [102.46111111111111, 226.07222222222222], [99.46111111111111, 229.67222222222222]], [[348.3920634920635, 443.8698412698413], [337.3920634920635, 463.8698412698413], [334.9920634920635, 464.6698412698413], [290.5920634920635, 437.4698412698413], [276.9920634920635, 460.26984126984127], [282.5920634920635, 465.8698412698413], [304.9920634920635, 479.4698412698413], [312.1920634920635, 485.4698412698413], [319.3920634920635, 488.6698412698413], [323.3920634920635, 492.6698412698413], [344.9920634920635, 504.26984126984127], [347.7920634920635, 502.26984126984127], [351.7920634920635, 495.4698412698413], [370.5920634920635, 458.26984126984127], [370.5920634920635, 456.26984126984127], [363.7920634920635, 451.0698412698413], [350.9920634920635, 443.0698412698413], [348.3920634920635, 443.8698412698413]], [[486.31470588235294, 234.49779411764706], [485.11470588235295, 237.29779411764704], [488.31470588235294, 246.49779411764706], [487.91470588235296, 251.29779411764704], [484.31470588235294, 253.29779411764704], [431.91470588235296, 268.097794117647], [425.11470588235295, 273.2977941176471], [425.5147058823529, 278.49779411764706], [432.714705882353, 303.2977941176471], [435.5147058823529, 307.69779411764705], [445.5147058823529, 304.49779411764706], [450.31470588235294, 304.49779411764706], [452.714705882353, 302.49779411764706], [459.11470588235295, 301.69779411764705], [467.91470588235296, 298.097794117647], [495.5147058823529, 290.097794117647], [499.91470588235296, 290.89779411764704], [501.5147058823529, 297.2977941176471], [506.714705882353, 304.097794117647], [517.9147058823529, 302.49779411764706], [521.114705882353, 300.097794117647], [533.114705882353, 296.097794117647], [536.314705882353, 293.69779411764705], [534.714705882353, 286.89779411764704], [535.5147058823529, 283.2977941176471], [533.114705882353, 279.69779411764705], [530.314705882353, 268.89779411764704], [530.714705882353, 264.89779411764704], [528.714705882353, 262.097794117647], [526.314705882353, 253.29779411764704], [520.714705882353, 226.09779411764706], [515.9147058823529, 225.29779411764704], [506.714705882353, 227.29779411764704], [486.31470588235294, 234.49779411764706]]], 'domain': [[0, 720L], [0, 576L]]}


small_scene_pattern = [[41.0, 135.5], [51, 160], [60, 171], [236, 79], [216, 44], [41.0, 135.5]]
small_scene_pattern_to_top_match = [0, {'scale': 0.6120032734202799, 'rotate': 25}]


small_map_object3_3D = [[[182.0, 250.0, 386.0], [182.0, 250.0, 406.0], [182.0, 308.0431034482759, 406.0], [182.0, 308.2155172413793, 386.0], [182.0, 250.0, 386.0]], [[184.10106899902817, 307.8483965014577, 357.63556851311955], [184.0080435296901, 307.98793470546485, 406.7530163236338], [183.97552195824335, 308.036717062635, 406.74082073434124], [183.72266666666667, 308.416, 362.744], [184.10106899902817, 307.8483965014577, 357.63556851311955]], [[184.0, 307.0, 350.0], [184.0, 307.0, 407.0], [185.07142857142858, 307.0295566502463, 408.42857142857144], [273.65, 309.4731034482759, 195.84], [281.0, 309.6758620689655, 90.0], [279.0, 309.62068965517244, 72.0], [271.6744186046512, 309.4186046511628, 61.41860465116279], [234.48582995951418, 308.3927125506073, 60.392712550607285], [219.0, 307.9655172413793, 61.0], [217.66071428571428, 307.92857142857144, 59.92857142857143], [210.48905803996195, 307.7307326355852, 59.730732635585156], [205.0, 307.5793103448276, 64.0], [191.0, 307.19310344827585, 205.0], [192.0, 307.2206896551724, 233.0], [184.0, 307.0, 350.0]], [[507.0, 306.0, 418.0], [507.0, 306.0, 173.0], [503.0, 306.90909090909093, 79.0], [499.0, 307.8181818181818, 70.0], [485.1732673267327, 310.9606210621062, 68.02475247524752], [497.0, 308.27272727272725, 411.0], [499.56410256410254, 307.6899766899767, 420.2307692307692], [507.0, 306.0, 418.0]], [[507.0, 242.0, 173.0], [507.0, 242.0, 418.0], [507.0, 306.0, 418.0], [507.0, 306.0, 173.0], [507.0, 242.0, 173.0]], [[499.0, 226.0, 79.0], [499.0, 226.0, 419.0], [507.0, 242.0, 418.0], [507.0, 242.0, 173.0], [499.0, 226.0, 79.0]], [[208.01188118811882, 223.15445544554456, 506.25742574257424], [491.0415903740518, 225.8846455663092, 510.8077426105153], [494.0, 225.91318327974275, 426.0], [497.0, 225.94212218649517, 421.0], [503.0, 226.0, 419.0], [503.0, 226.0, 79.0], [499.1832127985974, 225.96318211702828, 70.41222879684418], [430.6128299744536, 225.30173147885324, 167.64547260857225], [427.0, 225.2668810289389, 183.0], [429.0, 225.2861736334405, 244.0], [426.0, 225.2572347266881, 253.0], [425.0, 225.2475884244373, 272.0], [425.0, 225.2475884244373, 366.0], [426.0, 225.2572347266881, 387.0], [432.0, 225.31511254019293, 400.0], [433.0, 225.32475884244374, 420.0], [427.0, 225.2668810289389, 425.0], [392.0, 224.92926045016077, 425.0], [332.0, 224.35048231511254, 420.0], [290.0, 223.94533762057878, 421.0], [256.76827208665776, 223.6247743288102, 414.1581736649001], [202.7596993478501, 223.10379131203715, 490.7426771305405], [206.0, 223.13504823151126, 505.0], [208.01188118811882, 223.15445544554456, 506.25742574257424]], [[182.0, 234.0, 406.0], [182.0, 234.0, 386.0], [190.45762711864407, 224.69661016949152, 256.5983050847458], [191.4106699751861, 223.6482630272953, 410.70533498759306], [182.0, 234.0, 406.0]], [[182.0, 234.0, 386.0], [182.0, 234.0, 406.0], [182.0, 250.0, 406.0], [182.0, 250.0, 386.0], [182.0, 234.0, 386.0]], [[240.39413413180486, 302.5320308346624, 512.0], [214.4865871833085, 302.6356412660149, 510.04620329449574], [205.7548435171386, 302.8839635135336, 505.3635551984286], [200.90387481371087, 304.0634941892475, 483.1209767421097], [202.84426229508196, 307.6020862163892, 416.39324137315293], [198.3745785478587, 307.88809144072303, 411.0], [255.843589994808, 307.88809144072303, 411.0], [256.2049180327869, 307.7262473401485, 414.0519173251194], [290.1616989567809, 307.35376396887045, 421.0758894692201], [331.88002980625936, 307.4158445307501, 419.9052274452033], [392.03204172876303, 307.16752228323145, 424.5878755412705], [426.95901639344265, 307.16752228323145, 424.5878755412705], [432.7801788375559, 307.4158445307501, 419.9052274452033], [432.3460456040689, 307.88809144072303, 411.0], [497.0, 307.88809144072303, 411.0], [499.53790678645686, 307.40358196330857, 420.1364644312446], [496.8129657228018, 307.35376396887045, 421.0758894692201], [493.90238450074514, 307.1054417213517, 425.7585375652872], [491.0048235137057, 302.5320308346624, 512.0], [240.39413413180486, 302.5320308346624, 512.0]], [[432.32376231304, 307.9122891599563, 410.542910425802], [432.32380858803884, 307.9122807017544, 410.5438596491228], [255.78958581302075, 307.9122807017544, 410.5438596491228], [255.78920771008302, 307.91230915886496, 410.54066604446155], [432.32376231304, 307.9122891599563, 410.542910425802]], [[273.551544747309, 309.823327280851, 196.07629260645845], [270.75782414307, 309.4874519507398, 233.7699656265345], [263.9664679582712, 308.08964892590626, 390.6386768447837], [260.08569299552903, 307.9853352673366, 402.34529708495154], [255.23472429210136, 307.9540411697657, 405.8572831570019], [255.78920771008302, 307.91230915886496, 410.54066604446155], [197.99329359165424, 307.91231570633784, 410.539931253069], [187.32116244411327, 307.91231570633784, 410.539931253069], [185.08935029206808, 307.9315125723704, 408.3855592990366], [273.551544747309, 309.823327280851, 196.07629260645845]], [[182.0, 308.1953966969862, 378.771113054463], [183.67633591179043, 308.410042483932, 354.6824486515352], [183.97881354219203, 307.9410648212871, 407.3135563414118], [182.47019374068554, 307.9540411697657, 405.8572831570019], [182.0, 308.0399837669605, 396.21235878555177], [182.0, 308.1953966969862, 378.771113054463]], [[496.98426663760426, 307.9122818348209, 410.5437324905229], [432.32376231304, 307.9122891599563, 410.542910425802], [431.8099850968704, 308.0061979990505, 400.00397303691796], [425.9888226527571, 308.12094302347714, 387.12669077273335], [425.01862891207156, 308.3087076089026, 366.0547743404312], [425.01862891207156, 309.1432168774599, 272.4018124190884], [425.9888226527571, 309.32055009702833, 252.50055801080308], [428.89940387481374, 309.3935696580271, 244.3059238426856], [426.95901639344265, 309.9360006825894, 183.43149859381276], [430.83979135618483, 310.0924711704439, 165.871568233561], [427.9292101341282, 310.48886307300864, 121.38641132092317], [429.8695976154993, 310.9374118048582, 71.04794428820142], [436.6609538002981, 311.0, 64.02397214410071], [443.45230998509686, 311.0, 64.02397214410071], [485.1876353767392, 310.9606375917182, 68.44142592543604], [496.98426663760426, 307.9122818348209, 410.5437324905229]], [[190.8464793488847, 224.775050994185, 251.64869642907962], [192.172131147541, 224.9083251896319, 232.59930360251772], [191.20193740685545, 225.10489087440087, 204.5034150261149], [204.69027934502608, 226.0808907694619, 65.0], [273.62462852736263, 226.0808907694619, 65.0], [278.5193740685544, 226.030387640188, 72.2186063122182], [281.429955290611, 225.9075340872074, 89.77853667246998], [270.75782414307, 224.90013495276654, 233.7699656265345], [263.9664679582712, 223.80264321280654, 390.6386768447837], [260.08569299552903, 223.72074084415283, 402.34529708495154], [255.23472429210136, 223.6961701335567, 405.8572831570019], [256.2049180327869, 223.63883847549909, 414.0519173251194], [256.7619492860211, 223.6380323535203, 414.167139436864], [202.6118455355678, 223.10082441068874, 490.95233478718524], [200.90387481371087, 223.15561450044208, 483.1209767421097], [202.84426229508196, 223.62245800176834, 416.39324137315293], [197.99329359165424, 223.6634091860952, 410.539931253069], [191.5670745181545, 223.6634091860952, 410.539931253069], [190.8464793488847, 224.775050994185, 251.64869642907962]], [[452.67364928453156, 226.0808907694619, 65.0], [498.75335320417287, 226.04676811391874, 69.87728226418463], [499.0520773929463, 226.0417245401234, 70.59817964537197], [430.3724131477457, 225.3603729158762, 167.9863852149329], [430.83979135618483, 225.37516869095816, 165.871568233561], [427.9292101341282, 225.68639769184233, 121.38641132092317], [429.8695976154993, 226.03857787705337, 71.04794428820142], [435.7172494860285, 226.0808907694619, 65.0], [452.67364928453156, 226.0808907694619, 65.0]], [[491.0448794819029, 226.30821250036678, 510.80779549006274], [490.9918032786885, 227.26814233108865, 512.3875273425293], [487.7401891897298, 229.17543859649123, 515.5263157894736], [287.15344722391774, 229.17543859649123, 515.5263157894736], [214.4865871833085, 225.84542822072575, 510.04620329449574], [207.40340417061412, 223.53721927559002, 506.2476431538684], [491.0448794819029, 226.30821250036678, 510.80779549006274]], [[287.15344722391774, 229.17543859649123, 515.5263157894736], [487.7401891897298, 229.17543859649123, 515.5263157894736], [486.1408345752608, 236.89473684210526, 517.0701754385964], [307.62518628912073, 236.89473684210526, 517.0701754385964], [287.15344722391774, 229.17543859649123, 515.5263157894736]], [[486.1408345752608, 237.0, 517.0701754385965], [486.1408345752608, 295.56140350877195, 517.0701754385965], [307.62518628912073, 295.56140350877195, 517.0701754385965], [307.62518628912073, 237.0, 517.0701754385965], [486.1408345752608, 237.0, 517.0701754385965]], [[486.4470825994671, 296.0, 516.7745537153598], [490.9918032786885, 302.50877192982455, 512.3875273425293], [246.2099690935103, 302.50877192982455, 512.3875273425293], [303.7479629813172, 296.0, 516.7745537153598], [486.4470825994671, 296.0, 516.7745537153598]], [[507.0, 306.0, 418.0], [507.0, 242.0, 418.0], [507.0, 242.0, 173.0], [507.0, 306.0, 173.0], [507.0, 306.0, 418.0]], [[507.0, 306.0, 173.0], [507.0, 242.0, 173.0], [503.0, 226.0, 79.0], [503.0, 293.0, 79.0], [507.0, 306.0, 173.0]], [[503.0, 226.0, 79.0], [499.0, 226.0, 70.0], [499.0, 297.0, 70.0], [503.0, 293.0, 79.0], [503.0, 226.0, 79.0]], [[499.0, 226.0, 70.0], [443.0, 226.0, 63.0], [443.0, 311.0, 63.0], [485.0, 311.0, 68.25], [499.0, 297.0, 70.0], [499.0, 226.0, 70.0]], [[443.0, 226.0, 64.0], [437.0, 226.0, 64.0], [437.0, 311.0, 64.0], [443.0, 311.0, 64.0], [443.0, 226.0, 64.0]], [[435.25, 226.0, 65.0], [436.125, 268.5, 64.0], [436.125, 311.0, 64.0], [430.0, 311.0, 71.0], [430.0, 226.0, 71.0], [435.25, 226.0, 65.0]], [[428.0, 226.0, 121.0], [430.0, 226.0, 71.0], [430.0, 311.0, 71.0], [428.0, 310.0, 121.0], [428.0, 226.0, 121.0]], [[431.0, 310.0, 166.0], [431.0, 226.0, 166.0], [428.0, 226.0, 121.0], [428.0, 310.0, 121.0], [431.0, 310.0, 166.0]], [[427.0, 310.0, 183.0], [427.0, 226.0, 183.0], [431.0, 226.0, 166.0], [431.0, 310.0, 166.0], [427.0, 310.0, 183.0]], [[429.0, 309.0, 244.0], [429.0, 226.0, 244.0], [427.0, 226.0, 183.0], [427.0, 310.0, 183.0], [429.0, 309.0, 244.0]], [[426.0, 309.0, 253.0], [426.0, 226.0, 253.0], [429.0, 226.0, 244.0], [429.0, 309.0, 244.0], [426.0, 309.0, 253.0]], [[425.0, 309.0, 272.0], [425.0, 226.0, 272.0], [426.0, 226.0, 253.0], [426.0, 309.0, 253.0], [425.0, 309.0, 272.0]], [[425.0, 308.0, 366.0], [425.0, 226.0, 366.0], [425.0, 226.0, 272.0], [425.0, 309.0, 272.0], [425.0, 308.0, 366.0]], [[426.0, 308.0, 387.0], [426.0, 226.0, 387.0], [425.0, 226.0, 366.0], [425.0, 308.0, 366.0], [426.0, 308.0, 387.0]], [[432.0, 308.0, 400.0], [432.0, 226.0, 400.0], [426.0, 226.0, 387.0], [426.0, 308.0, 387.0], [432.0, 308.0, 400.0]], [[433.0, 307.0, 420.0], [433.0, 226.0, 420.0], [430.77777777777777, 226.0, 400.0], [430.77777777777777, 308.0, 400.0], [432.0, 308.0, 411.0], [433.0, 307.0, 420.0]], [[427.0, 226.0, 425.0], [427.0, 307.0, 425.0], [433.0, 307.0, 420.0], [433.0, 226.0, 420.0], [427.0, 226.0, 425.0]], [[427.0, 307.0, 425.0], [427.0, 226.0, 425.0], [392.0, 226.0, 425.0], [392.0, 307.0, 425.0], [427.0, 307.0, 425.0]], [[392.0, 307.0, 425.0], [392.0, 226.0, 425.0], [332.0, 226.0, 420.0], [332.0, 307.0, 420.0], [392.0, 307.0, 425.0]], [[290.0, 226.0, 421.0], [290.0, 307.0, 421.0], [332.0, 307.0, 420.0], [332.0, 226.0, 420.0], [290.0, 226.0, 421.0]], [[290.0, 307.0, 421.0], [290.0, 226.0, 421.0], [256.0, 226.0, 414.0], [256.0, 307.0, 414.0], [290.0, 307.0, 421.0]], [[256.0, 307.0, 414.0], [256.0, 226.0, 414.0], [255.0, 226.0, 406.0], [255.0, 307.0, 406.0], [256.0, 307.0, 414.0]], [[255.0, 226.0, 406.0], [255.0, 307.0, 406.0], [260.0, 307.0, 402.0], [260.0, 226.0, 402.0], [255.0, 226.0, 406.0]], [[260.0, 307.0, 402.0], [260.0, 226.0, 402.0], [264.0, 226.0, 391.0], [264.0, 307.0, 391.0], [260.0, 307.0, 402.0]], [[264.0, 307.0, 391.0], [264.0, 226.0, 391.0], [271.0, 226.0, 234.0], [271.0, 307.0, 234.0], [264.0, 307.0, 391.0]], [[271.0, 307.0, 234.0], [271.0, 226.0, 234.0], [281.0, 226.0, 90.0], [281.0, 307.0, 90.0], [271.0, 307.0, 234.0]], [[281.0, 226.0, 90.0], [279.0, 226.0, 72.0], [279.0, 307.0, 72.0], [281.0, 307.0, 90.0], [281.0, 226.0, 90.0]], [[274.15384615384613, 226.0, 65.0], [270.0, 231.0, 59.0], [270.0, 307.0, 59.0], [279.0, 307.0, 72.0], [279.0, 226.0, 72.0], [274.15384615384613, 226.0, 65.0]], [[219.0, 230.0, 61.0], [219.0, 307.0, 61.0], [270.0, 307.0, 59.0], [270.0, 231.0, 59.0], [219.0, 230.0, 61.0]], [[219.0, 230.0, 61.0], [214.0, 234.0, 57.0], [214.0, 305.0, 57.0], [217.33333333333334, 307.0, 59.66666666666667], [219.0, 307.0, 61.0], [219.0, 230.0, 61.0]], [[205.0, 226.0, 65.0], [205.0, 307.0, 65.0], [211.0, 307.0, 59.666666666666664], [214.0, 305.0, 57.0], [214.0, 234.0, 57.0], [205.0, 226.0, 65.0]], [[191.0, 225.0, 205.0], [204.80281690140845, 226.0, 65.0], [204.90140845070422, 268.5, 64.0], [204.90140845070422, 307.0, 64.0], [191.0, 307.0, 205.0], [191.0, 225.0, 205.0]], [[192.0, 225.0, 233.0], [191.0, 225.0, 205.0], [191.0, 307.0, 205.0], [192.0, 307.0, 233.0], [192.0, 225.0, 233.0]], [[190.33333333333334, 224.83333333333334, 258.5], [192.0, 225.0, 233.0], [192.0, 307.0, 233.0], [184.35294117647058, 307.0, 350.0], [183.66666666666666, 308.1666666666667, 360.5], [182.0, 308.0, 386.0], [182.0, 250.0, 386.0], [182.0, 234.0, 386.0], [190.33333333333334, 224.83333333333334, 258.5]], [[182.0, 308.0, 406.0], [182.0, 234.0, 406.0], [182.0, 234.0, 386.0], [182.0, 308.0, 386.0], [182.0, 308.0, 406.0]], [[187.0, 307.0, 411.0], [187.0, 232.0, 411.0], [182.0, 234.0, 406.0], [182.0, 250.0, 406.0], [182.0, 308.0, 406.0], [183.5, 308.0, 407.5], [184.0, 307.0, 408.0], [187.0, 307.0, 411.0]], [[187.0, 232.0, 411.0], [187.0, 307.0, 411.0], [198.0, 307.0, 411.0], [198.0, 226.0, 411.0], [194.0, 224.0, 411.0], [191.44444444444446, 224.0, 411.0], [187.0, 232.0, 411.0]], [[203.0, 307.0, 416.0], [203.0, 226.0, 416.0], [198.0, 226.0, 411.0], [198.0, 307.0, 411.0], [203.0, 307.0, 416.0]], [[201.0, 304.0, 483.0], [201.0, 226.0, 483.0], [203.0, 226.0, 416.0], [203.0, 307.0, 416.0], [202.5, 307.0, 432.75], [201.0, 304.0, 483.0]], [[201.0, 304.0, 483.0], [206.0, 303.0, 505.0], [206.0, 226.0, 505.0], [201.0, 226.0, 483.0], [201.0, 304.0, 483.0]], [[214.0, 303.0, 510.0], [214.0, 226.0, 510.0], [206.0, 226.0, 505.0], [206.0, 303.0, 505.0], [214.0, 303.0, 510.0]], [[308.0, 237.0, 517.0], [287.0, 229.0, 515.436170212766], [214.0, 226.0, 510.0], [214.0, 303.0, 510.0], [246.0, 303.0, 512.3829787234042], [308.0, 296.0, 517.0], [308.0, 237.0, 517.0]], [[308.0, 237.0, 517.0], [308.0, 296.0, 517.0], [486.0, 296.0, 517.0], [486.0, 237.0, 517.0], [308.0, 237.0, 517.0]], [[486.0, 237.0, 517.0], [486.0, 296.0, 517.0], [491.0, 303.0, 512.0], [491.0, 227.0, 512.0], [488.0, 229.0, 515.0], [486.0, 237.0, 517.0]], [[491.0, 227.0, 512.0], [491.05232558139534, 226.0, 510.5], [494.0, 226.0, 426.0], [494.0, 302.0, 426.0], [491.85714285714283, 304.14285714285717, 487.42857142857144], [491.0, 303.0, 512.0], [491.0, 227.0, 512.0]], [[494.0, 302.0, 426.0], [494.0, 226.0, 426.0], [497.0, 226.0, 421.0], [497.0, 299.0, 421.0], [494.0, 302.0, 426.0]], [[497.0, 226.0, 421.0], [497.0, 299.0, 421.0], [507.0, 306.0, 418.0], [507.0, 242.0, 418.0], [503.0, 226.0, 419.2], [497.0, 226.0, 421.0]], [[235.83, 223.0, 455.61], [242.62, 223.0, 452.68], [242.62, 311.0, 452.68], [235.83, 311.0, 455.61], [235.83, 223.0, 455.61]], [[242.62, 223.0, 452.68], [245.53, 223.0, 446.83], [245.53, 311.0, 446.83], [242.62, 311.0, 452.68], [242.62, 223.0, 452.68]], [[245.53, 223.0, 446.83], [263.0, 223.0, 445.66], [263.0, 311.0, 445.66], [245.53, 311.0, 446.83], [245.53, 223.0, 446.83]], [[263.0, 223.0, 445.66], [291.13, 223.0, 452.68], [291.13, 311.0, 452.68], [263.0, 311.0, 445.66], [263.0, 223.0, 445.66]], [[291.13, 223.0, 452.68], [297.92, 223.0, 463.22], [297.92, 311.0, 463.22], [291.13, 311.0, 452.68], [291.13, 223.0, 452.68]], [[297.92, 223.0, 463.22], [288.22, 223.0, 473.76], [288.22, 311.0, 473.76], [297.92, 311.0, 463.22], [297.92, 223.0, 463.22]], [[288.22, 223.0, 473.76], [264.94, 223.0, 474.93], [264.94, 311.0, 474.93], [288.22, 311.0, 473.76], [288.22, 223.0, 473.76]], [[264.94, 223.0, 474.93], [238.74, 223.0, 469.07], [238.74, 311.0, 469.07], [264.94, 311.0, 474.93], [264.94, 223.0, 474.93]], [[238.74, 223.0, 469.07], [234.86, 223.0, 464.39], [234.86, 311.0, 464.39], [238.74, 311.0, 469.07], [238.74, 223.0, 469.07]], [[234.86, 223.0, 464.39], [235.83, 223.0, 455.61], [235.83, 311.0, 455.61], [234.86, 311.0, 464.39], [234.86, 223.0, 464.39]], [[433.27, 223.0, 462.63], [444.42, 223.0, 460.88], [444.42, 311.0, 460.88], [433.27, 311.0, 462.63], [433.27, 223.0, 462.63]], [[444.42, 223.0, 460.88], [451.21, 223.0, 465.56], [451.21, 311.0, 465.56], [444.42, 311.0, 460.88], [444.42, 223.0, 460.88]], [[451.21, 223.0, 465.56], [452.18, 223.0, 452.68], [452.18, 311.0, 452.68], [451.21, 311.0, 465.56], [451.21, 223.0, 465.56]], [[452.18, 223.0, 452.68], [397.85, 223.0, 453.85], [397.85, 311.0, 453.85], [452.18, 311.0, 452.68], [452.18, 223.0, 452.68]], [[397.85, 223.0, 453.85], [410.47, 223.0, 465.56], [410.47, 311.0, 465.56], [397.85, 311.0, 453.85], [397.85, 223.0, 453.85]], [[410.47, 223.0, 465.56], [413.38, 223.0, 476.1], [413.38, 311.0, 476.1], [410.47, 311.0, 465.56], [410.47, 223.0, 465.56]], [[413.38, 223.0, 476.1], [419.2, 223.0, 476.1], [419.2, 311.0, 476.1], [413.38, 311.0, 476.1], [413.38, 223.0, 476.1]], [[419.2, 223.0, 476.1], [424.05, 223.0, 465.56], [424.05, 311.0, 465.56], [419.2, 311.0, 476.1], [419.2, 223.0, 476.1]], [[424.05, 223.0, 465.56], [428.9, 223.0, 467.9], [428.9, 311.0, 467.9], [424.05, 311.0, 465.56], [424.05, 223.0, 465.56]], [[428.9, 223.0, 467.9], [433.27, 223.0, 462.63], [433.27, 311.0, 462.63], [428.9, 311.0, 467.9], [428.9, 223.0, 467.9]]]
small_map_object3_3D_no_features = [[[182.0, 250.0, 386.0], [182.0, 250.0, 406.0], [182.0, 308.0431034482759, 406.0], [182.0, 308.2155172413793, 386.0], [182.0, 250.0, 386.0]], [[184.10106899902817, 307.8483965014577, 357.63556851311955], [184.0080435296901, 307.98793470546485, 406.7530163236338], [183.97552195824335, 308.036717062635, 406.74082073434124], [183.72266666666667, 308.416, 362.744], [184.10106899902817, 307.8483965014577, 357.63556851311955]], [[184.0, 307.0, 350.0], [184.0, 307.0, 407.0], [185.07142857142858, 307.0295566502463, 408.42857142857144], [273.65, 309.4731034482759, 195.84], [281.0, 309.6758620689655, 90.0], [279.0, 309.62068965517244, 72.0], [271.6744186046512, 309.4186046511628, 61.41860465116279], [234.48582995951418, 308.3927125506073, 60.392712550607285], [219.0, 307.9655172413793, 61.0], [217.66071428571428, 307.92857142857144, 59.92857142857143], [210.48905803996195, 307.7307326355852, 59.730732635585156], [205.0, 307.5793103448276, 64.0], [191.0, 307.19310344827585, 205.0], [192.0, 307.2206896551724, 233.0], [184.0, 307.0, 350.0]], [[507.0, 306.0, 418.0], [507.0, 306.0, 173.0], [503.0, 306.90909090909093, 79.0], [499.0, 307.8181818181818, 70.0], [485.1732673267327, 310.9606210621062, 68.02475247524752], [497.0, 308.27272727272725, 411.0], [499.56410256410254, 307.6899766899767, 420.2307692307692], [507.0, 306.0, 418.0]], [[507.0, 242.0, 173.0], [507.0, 242.0, 418.0], [507.0, 306.0, 418.0], [507.0, 306.0, 173.0], [507.0, 242.0, 173.0]], [[499.0, 226.0, 79.0], [499.0, 226.0, 419.0], [507.0, 242.0, 418.0], [507.0, 242.0, 173.0], [499.0, 226.0, 79.0]], [[208.01188118811882, 223.15445544554456, 506.25742574257424], [491.0415903740518, 225.8846455663092, 510.8077426105153], [494.0, 225.91318327974275, 426.0], [497.0, 225.94212218649517, 421.0], [503.0, 226.0, 419.0], [503.0, 226.0, 79.0], [499.1832127985974, 225.96318211702828, 70.41222879684418], [430.6128299744536, 225.30173147885324, 167.64547260857225], [427.0, 225.2668810289389, 183.0], [429.0, 225.2861736334405, 244.0], [426.0, 225.2572347266881, 253.0], [425.0, 225.2475884244373, 272.0], [425.0, 225.2475884244373, 366.0], [426.0, 225.2572347266881, 387.0], [432.0, 225.31511254019293, 400.0], [433.0, 225.32475884244374, 420.0], [427.0, 225.2668810289389, 425.0], [392.0, 224.92926045016077, 425.0], [332.0, 224.35048231511254, 420.0], [290.0, 223.94533762057878, 421.0], [256.76827208665776, 223.6247743288102, 414.1581736649001], [202.7596993478501, 223.10379131203715, 490.7426771305405], [206.0, 223.13504823151126, 505.0], [208.01188118811882, 223.15445544554456, 506.25742574257424]], [[182.0, 234.0, 406.0], [182.0, 234.0, 386.0], [190.45762711864407, 224.69661016949152, 256.5983050847458], [191.4106699751861, 223.6482630272953, 410.70533498759306], [182.0, 234.0, 406.0]], [[182.0, 234.0, 386.0], [182.0, 234.0, 406.0], [182.0, 250.0, 406.0], [182.0, 250.0, 386.0], [182.0, 234.0, 386.0]], [[240.39413413180486, 302.5320308346624, 512.0], [214.4865871833085, 302.6356412660149, 510.04620329449574], [205.7548435171386, 302.8839635135336, 505.3635551984286], [200.90387481371087, 304.0634941892475, 483.1209767421097], [202.84426229508196, 307.6020862163892, 416.39324137315293], [198.3745785478587, 307.88809144072303, 411.0], [255.843589994808, 307.88809144072303, 411.0], [256.2049180327869, 307.7262473401485, 414.0519173251194], [290.1616989567809, 307.35376396887045, 421.0758894692201], [331.88002980625936, 307.4158445307501, 419.9052274452033], [392.03204172876303, 307.16752228323145, 424.5878755412705], [426.95901639344265, 307.16752228323145, 424.5878755412705], [432.7801788375559, 307.4158445307501, 419.9052274452033], [432.3460456040689, 307.88809144072303, 411.0], [497.0, 307.88809144072303, 411.0], [499.53790678645686, 307.40358196330857, 420.1364644312446], [496.8129657228018, 307.35376396887045, 421.0758894692201], [493.90238450074514, 307.1054417213517, 425.7585375652872], [491.0048235137057, 302.5320308346624, 512.0], [240.39413413180486, 302.5320308346624, 512.0]], [[432.32376231304, 307.9122891599563, 410.542910425802], [432.32380858803884, 307.9122807017544, 410.5438596491228], [255.78958581302075, 307.9122807017544, 410.5438596491228], [255.78920771008302, 307.91230915886496, 410.54066604446155], [432.32376231304, 307.9122891599563, 410.542910425802]], [[273.551544747309, 309.823327280851, 196.07629260645845], [270.75782414307, 309.4874519507398, 233.7699656265345], [263.9664679582712, 308.08964892590626, 390.6386768447837], [260.08569299552903, 307.9853352673366, 402.34529708495154], [255.23472429210136, 307.9540411697657, 405.8572831570019], [255.78920771008302, 307.91230915886496, 410.54066604446155], [197.99329359165424, 307.91231570633784, 410.539931253069], [187.32116244411327, 307.91231570633784, 410.539931253069], [185.08935029206808, 307.9315125723704, 408.3855592990366], [273.551544747309, 309.823327280851, 196.07629260645845]], [[182.0, 308.1953966969862, 378.771113054463], [183.67633591179043, 308.410042483932, 354.6824486515352], [183.97881354219203, 307.9410648212871, 407.3135563414118], [182.47019374068554, 307.9540411697657, 405.8572831570019], [182.0, 308.0399837669605, 396.21235878555177], [182.0, 308.1953966969862, 378.771113054463]], [[496.98426663760426, 307.9122818348209, 410.5437324905229], [432.32376231304, 307.9122891599563, 410.542910425802], [431.8099850968704, 308.0061979990505, 400.00397303691796], [425.9888226527571, 308.12094302347714, 387.12669077273335], [425.01862891207156, 308.3087076089026, 366.0547743404312], [425.01862891207156, 309.1432168774599, 272.4018124190884], [425.9888226527571, 309.32055009702833, 252.50055801080308], [428.89940387481374, 309.3935696580271, 244.3059238426856], [426.95901639344265, 309.9360006825894, 183.43149859381276], [430.83979135618483, 310.0924711704439, 165.871568233561], [427.9292101341282, 310.48886307300864, 121.38641132092317], [429.8695976154993, 310.9374118048582, 71.04794428820142], [436.6609538002981, 311.0, 64.02397214410071], [443.45230998509686, 311.0, 64.02397214410071], [485.1876353767392, 310.9606375917182, 68.44142592543604], [496.98426663760426, 307.9122818348209, 410.5437324905229]], [[190.8464793488847, 224.775050994185, 251.64869642907962], [192.172131147541, 224.9083251896319, 232.59930360251772], [191.20193740685545, 225.10489087440087, 204.5034150261149], [204.69027934502608, 226.0808907694619, 65.0], [273.62462852736263, 226.0808907694619, 65.0], [278.5193740685544, 226.030387640188, 72.2186063122182], [281.429955290611, 225.9075340872074, 89.77853667246998], [270.75782414307, 224.90013495276654, 233.7699656265345], [263.9664679582712, 223.80264321280654, 390.6386768447837], [260.08569299552903, 223.72074084415283, 402.34529708495154], [255.23472429210136, 223.6961701335567, 405.8572831570019], [256.2049180327869, 223.63883847549909, 414.0519173251194], [256.7619492860211, 223.6380323535203, 414.167139436864], [202.6118455355678, 223.10082441068874, 490.95233478718524], [200.90387481371087, 223.15561450044208, 483.1209767421097], [202.84426229508196, 223.62245800176834, 416.39324137315293], [197.99329359165424, 223.6634091860952, 410.539931253069], [191.5670745181545, 223.6634091860952, 410.539931253069], [190.8464793488847, 224.775050994185, 251.64869642907962]], [[452.67364928453156, 226.0808907694619, 65.0], [498.75335320417287, 226.04676811391874, 69.87728226418463], [499.0520773929463, 226.0417245401234, 70.59817964537197], [430.3724131477457, 225.3603729158762, 167.9863852149329], [430.83979135618483, 225.37516869095816, 165.871568233561], [427.9292101341282, 225.68639769184233, 121.38641132092317], [429.8695976154993, 226.03857787705337, 71.04794428820142], [435.7172494860285, 226.0808907694619, 65.0], [452.67364928453156, 226.0808907694619, 65.0]], [[491.0448794819029, 226.30821250036678, 510.80779549006274], [490.9918032786885, 227.26814233108865, 512.3875273425293], [487.7401891897298, 229.17543859649123, 515.5263157894736], [287.15344722391774, 229.17543859649123, 515.5263157894736], [214.4865871833085, 225.84542822072575, 510.04620329449574], [207.40340417061412, 223.53721927559002, 506.2476431538684], [491.0448794819029, 226.30821250036678, 510.80779549006274]], [[287.15344722391774, 229.17543859649123, 515.5263157894736], [487.7401891897298, 229.17543859649123, 515.5263157894736], [486.1408345752608, 236.89473684210526, 517.0701754385964], [307.62518628912073, 236.89473684210526, 517.0701754385964], [287.15344722391774, 229.17543859649123, 515.5263157894736]], [[486.1408345752608, 237.0, 517.0701754385965], [486.1408345752608, 295.56140350877195, 517.0701754385965], [307.62518628912073, 295.56140350877195, 517.0701754385965], [307.62518628912073, 237.0, 517.0701754385965], [486.1408345752608, 237.0, 517.0701754385965]], [[486.4470825994671, 296.0, 516.7745537153598], [490.9918032786885, 302.50877192982455, 512.3875273425293], [246.2099690935103, 302.50877192982455, 512.3875273425293], [303.7479629813172, 296.0, 516.7745537153598], [486.4470825994671, 296.0, 516.7745537153598]], [[507.0, 306.0, 418.0], [507.0, 242.0, 418.0], [507.0, 242.0, 173.0], [507.0, 306.0, 173.0], [507.0, 306.0, 418.0]], [[507.0, 306.0, 173.0], [507.0, 242.0, 173.0], [503.0, 226.0, 79.0], [503.0, 293.0, 79.0], [507.0, 306.0, 173.0]], [[503.0, 226.0, 79.0], [499.0, 226.0, 70.0], [499.0, 297.0, 70.0], [503.0, 293.0, 79.0], [503.0, 226.0, 79.0]], [[499.0, 226.0, 70.0], [443.0, 226.0, 63.0], [443.0, 311.0, 63.0], [485.0, 311.0, 68.25], [499.0, 297.0, 70.0], [499.0, 226.0, 70.0]], [[443.0, 226.0, 64.0], [437.0, 226.0, 64.0], [437.0, 311.0, 64.0], [443.0, 311.0, 64.0], [443.0, 226.0, 64.0]], [[435.25, 226.0, 65.0], [436.125, 268.5, 64.0], [436.125, 311.0, 64.0], [430.0, 311.0, 71.0], [430.0, 226.0, 71.0], [435.25, 226.0, 65.0]], [[428.0, 226.0, 121.0], [430.0, 226.0, 71.0], [430.0, 311.0, 71.0], [428.0, 310.0, 121.0], [428.0, 226.0, 121.0]], [[431.0, 310.0, 166.0], [431.0, 226.0, 166.0], [428.0, 226.0, 121.0], [428.0, 310.0, 121.0], [431.0, 310.0, 166.0]], [[427.0, 310.0, 183.0], [427.0, 226.0, 183.0], [431.0, 226.0, 166.0], [431.0, 310.0, 166.0], [427.0, 310.0, 183.0]], [[429.0, 309.0, 244.0], [429.0, 226.0, 244.0], [427.0, 226.0, 183.0], [427.0, 310.0, 183.0], [429.0, 309.0, 244.0]], [[426.0, 309.0, 253.0], [426.0, 226.0, 253.0], [429.0, 226.0, 244.0], [429.0, 309.0, 244.0], [426.0, 309.0, 253.0]], [[425.0, 309.0, 272.0], [425.0, 226.0, 272.0], [426.0, 226.0, 253.0], [426.0, 309.0, 253.0], [425.0, 309.0, 272.0]], [[425.0, 308.0, 366.0], [425.0, 226.0, 366.0], [425.0, 226.0, 272.0], [425.0, 309.0, 272.0], [425.0, 308.0, 366.0]], [[426.0, 308.0, 387.0], [426.0, 226.0, 387.0], [425.0, 226.0, 366.0], [425.0, 308.0, 366.0], [426.0, 308.0, 387.0]], [[432.0, 308.0, 400.0], [432.0, 226.0, 400.0], [426.0, 226.0, 387.0], [426.0, 308.0, 387.0], [432.0, 308.0, 400.0]], [[433.0, 307.0, 420.0], [433.0, 226.0, 420.0], [430.77777777777777, 226.0, 400.0], [430.77777777777777, 308.0, 400.0], [432.0, 308.0, 411.0], [433.0, 307.0, 420.0]], [[427.0, 226.0, 425.0], [427.0, 307.0, 425.0], [433.0, 307.0, 420.0], [433.0, 226.0, 420.0], [427.0, 226.0, 425.0]], [[427.0, 307.0, 425.0], [427.0, 226.0, 425.0], [392.0, 226.0, 425.0], [392.0, 307.0, 425.0], [427.0, 307.0, 425.0]], [[392.0, 307.0, 425.0], [392.0, 226.0, 425.0], [332.0, 226.0, 420.0], [332.0, 307.0, 420.0], [392.0, 307.0, 425.0]], [[290.0, 226.0, 421.0], [290.0, 307.0, 421.0], [332.0, 307.0, 420.0], [332.0, 226.0, 420.0], [290.0, 226.0, 421.0]], [[290.0, 307.0, 421.0], [290.0, 226.0, 421.0], [256.0, 226.0, 414.0], [256.0, 307.0, 414.0], [290.0, 307.0, 421.0]], [[256.0, 307.0, 414.0], [256.0, 226.0, 414.0], [255.0, 226.0, 406.0], [255.0, 307.0, 406.0], [256.0, 307.0, 414.0]], [[255.0, 226.0, 406.0], [255.0, 307.0, 406.0], [260.0, 307.0, 402.0], [260.0, 226.0, 402.0], [255.0, 226.0, 406.0]], [[260.0, 307.0, 402.0], [260.0, 226.0, 402.0], [264.0, 226.0, 391.0], [264.0, 307.0, 391.0], [260.0, 307.0, 402.0]], [[264.0, 307.0, 391.0], [264.0, 226.0, 391.0], [271.0, 226.0, 234.0], [271.0, 307.0, 234.0], [264.0, 307.0, 391.0]], [[271.0, 307.0, 234.0], [271.0, 226.0, 234.0], [281.0, 226.0, 90.0], [281.0, 307.0, 90.0], [271.0, 307.0, 234.0]], [[281.0, 226.0, 90.0], [279.0, 226.0, 72.0], [279.0, 307.0, 72.0], [281.0, 307.0, 90.0], [281.0, 226.0, 90.0]], [[274.15384615384613, 226.0, 65.0], [270.0, 231.0, 59.0], [270.0, 307.0, 59.0], [279.0, 307.0, 72.0], [279.0, 226.0, 72.0], [274.15384615384613, 226.0, 65.0]], [[219.0, 230.0, 61.0], [219.0, 307.0, 61.0], [270.0, 307.0, 59.0], [270.0, 231.0, 59.0], [219.0, 230.0, 61.0]], [[219.0, 230.0, 61.0], [214.0, 234.0, 57.0], [214.0, 305.0, 57.0], [217.33333333333334, 307.0, 59.66666666666667], [219.0, 307.0, 61.0], [219.0, 230.0, 61.0]], [[205.0, 226.0, 65.0], [205.0, 307.0, 65.0], [211.0, 307.0, 59.666666666666664], [214.0, 305.0, 57.0], [214.0, 234.0, 57.0], [205.0, 226.0, 65.0]], [[191.0, 225.0, 205.0], [204.80281690140845, 226.0, 65.0], [204.90140845070422, 268.5, 64.0], [204.90140845070422, 307.0, 64.0], [191.0, 307.0, 205.0], [191.0, 225.0, 205.0]], [[192.0, 225.0, 233.0], [191.0, 225.0, 205.0], [191.0, 307.0, 205.0], [192.0, 307.0, 233.0], [192.0, 225.0, 233.0]], [[190.33333333333334, 224.83333333333334, 258.5], [192.0, 225.0, 233.0], [192.0, 307.0, 233.0], [184.35294117647058, 307.0, 350.0], [183.66666666666666, 308.1666666666667, 360.5], [182.0, 308.0, 386.0], [182.0, 250.0, 386.0], [182.0, 234.0, 386.0], [190.33333333333334, 224.83333333333334, 258.5]], [[182.0, 308.0, 406.0], [182.0, 234.0, 406.0], [182.0, 234.0, 386.0], [182.0, 308.0, 386.0], [182.0, 308.0, 406.0]], [[187.0, 307.0, 411.0], [187.0, 232.0, 411.0], [182.0, 234.0, 406.0], [182.0, 250.0, 406.0], [182.0, 308.0, 406.0], [183.5, 308.0, 407.5], [184.0, 307.0, 408.0], [187.0, 307.0, 411.0]], [[187.0, 232.0, 411.0], [187.0, 307.0, 411.0], [198.0, 307.0, 411.0], [198.0, 226.0, 411.0], [194.0, 224.0, 411.0], [191.44444444444446, 224.0, 411.0], [187.0, 232.0, 411.0]], [[203.0, 307.0, 416.0], [203.0, 226.0, 416.0], [198.0, 226.0, 411.0], [198.0, 307.0, 411.0], [203.0, 307.0, 416.0]], [[201.0, 304.0, 483.0], [201.0, 226.0, 483.0], [203.0, 226.0, 416.0], [203.0, 307.0, 416.0], [202.5, 307.0, 432.75], [201.0, 304.0, 483.0]], [[201.0, 304.0, 483.0], [206.0, 303.0, 505.0], [206.0, 226.0, 505.0], [201.0, 226.0, 483.0], [201.0, 304.0, 483.0]], [[214.0, 303.0, 510.0], [214.0, 226.0, 510.0], [206.0, 226.0, 505.0], [206.0, 303.0, 505.0], [214.0, 303.0, 510.0]], [[308.0, 237.0, 517.0], [287.0, 229.0, 515.436170212766], [214.0, 226.0, 510.0], [214.0, 303.0, 510.0], [246.0, 303.0, 512.3829787234042], [308.0, 296.0, 517.0], [308.0, 237.0, 517.0]], [[308.0, 237.0, 517.0], [308.0, 296.0, 517.0], [486.0, 296.0, 517.0], [486.0, 237.0, 517.0], [308.0, 237.0, 517.0]], [[486.0, 237.0, 517.0], [486.0, 296.0, 517.0], [491.0, 303.0, 512.0], [491.0, 227.0, 512.0], [488.0, 229.0, 515.0], [486.0, 237.0, 517.0]], [[491.0, 227.0, 512.0], [491.05232558139534, 226.0, 510.5], [494.0, 226.0, 426.0], [494.0, 302.0, 426.0], [491.85714285714283, 304.14285714285717, 487.42857142857144], [491.0, 303.0, 512.0], [491.0, 227.0, 512.0]], [[494.0, 302.0, 426.0], [494.0, 226.0, 426.0], [497.0, 226.0, 421.0], [497.0, 299.0, 421.0], [494.0, 302.0, 426.0]], [[497.0, 226.0, 421.0], [497.0, 299.0, 421.0], [507.0, 306.0, 418.0], [507.0, 242.0, 418.0], [503.0, 226.0, 419.2], [497.0, 226.0, 421.0]]]


big_map_object1 = {'color': [[255, 255, 255]], 'vect': [[[328.0, 382.0], [323, 387], [328, 409], [326, 419], [332, 427], [385, 421], [411, 414], [390, 249], [393, 245], [432, 242], [436, 238], [422, 160], [339, 168], [325, 174], [318, 170], [271, 179], [280, 266], [283, 271], [310, 269], [316, 283], [313, 289], [320, 355], [323, 378], [328, 378], [328.0, 382.0]]], 'domain': [[0, 719L], [0, 479L]]}
big_map_object2 = {'color': [[255, 255, 255]], 'vect': [[[358.5, 182.0], [310, 224], [282, 257], [267, 266], [261, 277], [251, 282], [213, 319], [221, 332], [282, 402], [355, 335], [436, 254], [434, 247], [375, 180], [365, 176], [358.5, 182.0]]], 'domain': [[0, 721L], [0, 479L]]}
big_map_object3 = {'color': [[255, 255, 255]], 'vect': [[[230.0, 326.5], [335, 352], [355, 356], [363, 353], [414, 88], [413, 74], [320, 51], [292, 45], [286, 48], [274, 99], [274, 120], [280, 126], [335, 140], [334, 158], [331, 160], [327, 180], [328, 188], [324, 195], [310, 269], [305, 272], [243, 258], [239, 263], [232, 297], [228, 319], [230.0, 326.5]]], 'domain': [[0, 721L], [0, 480L]]}
big_map_object4 = {'color': [[255, 255, 255]], 'vect': [[[395.0, 239.5], [240, 166], [235, 171], [215, 216], [204, 247], [209, 252], [358, 324], [361, 332], [355, 343], [355, 351], [341, 375], [331, 405], [339, 418], [414, 448], [421, 439], [480, 279], [403, 247], [395.0, 239.5]]], 'domain': [[0, 720L], [0, 481L]]}
big_map_object5 = {'color': [[54, 13, 255]], 'vect': [[[302.5, 378.0], [299, 355], [303, 356], [308, 368], [313, 373], [317, 372], [451, 309], [482, 290], [457, 228], [444, 205], [285, 275], [272, 286], [267, 284], [263, 276], [229, 192], [160, 221], [148, 229], [179, 322], [216, 414], [275, 392], [302.5, 378.0]]], 'domain': [[0, 718L], [0, 481L]]}

